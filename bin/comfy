#!/usr/bin/env ruby
require 'comfy'
require 'fileutils'
require 'syslogger'
require 'settings'

#Logger initialization
logger = Logger.new(STDOUT)

#make sure log file is specified while logging to file
if Settings['logging'] && Settings.logging['log_type'] == 'file' &&
    !Settings.logging['log_file']
  fail ArgumentError, 'Missing file for logging. Check your configuration file.'
end

#initialize specific logger according to the configuration
if Settings['logging'] && Settings['logging']['log_type'] == 'file'
  begin
    log_file = File.open(Settings['logging']['log_file'], File::WRONLY | File::CREAT | File::APPEND)
    logger = Logger.new(log_file)
  rescue => e
    puts "Unable to create log file #{Settings['logging']['log_file']}: #{e.message}.\
Falling back to STDOUT."
  end
elsif Settings['logging'] && Settings['logging']['log_type'] == 'syslog'
  logger = Syslogger.new('comfy')
end

if Settings['logging'] && Settings.logging['log_level'] && Logger::Severity.const_defined?(Settings.logging['log_level'])
  logger.level = Logger::Severity.const_get Settings.logging['log_level']
else
  logger.level = Logger::ERROR
end

#Command line options handling
options = Comfy::Opts.parse(ARGV, logger)

opts = {}
opts[:size] = options.size
opts[:builders] = options.formats
opts[:distribution] = options.distribution
opts[:headless] = !options.debug
opts[:template_dir] = options.template_dir
opts[:version] = options.version
opts[:output_dir] = Settings['output_dir']

if options.debug
  logger.level = Logger::DEBUG
  ENV['PACKER_LOG'] = '1'
end


logger.debug("Starting Comfy with options: #{opts}.")

creator = Comfy::Creator.new(opts, logger)
creator.create


